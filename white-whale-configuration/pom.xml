<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dusun</groupId>
        <artifactId>white-whale</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>white-whale-configuration</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>white-whale-configuration</name>
    <description>应用配置中心</description>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-monitor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>
        <!--        <dependency>    -->
        <!--            <groupId>org.springframework.cloud</groupId>-->
        <!--            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
        <!--        </dependency>   -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>io.lettuce</groupId>
            <artifactId>lettuce-core</artifactId>
            <version>${lettuce-core.version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${io.rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.session</groupId>
                <artifactId>spring-session-bom</artifactId>
                <version>${spring-session-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- 启动应用时跳过单元测试-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--    &lt;!&ndash;设置不同的环境下，对SpringBoot应用编译路径、打包应用。&ndash;&gt;-->
    <!--    <profiles>-->
    <!--        <profile>-->
    <!--            <id>dev</id>-->
    <!--            <activation>-->
    <!--                <activeByDefault>true</activeByDefault>-->
    <!--            </activation>-->
    <!--            <properties>-->
    <!--                <profileName>dev</profileName>-->
    <!--            </properties>-->
    <!--            <build>-->
    <!--                <directory>${project.basedir}/target/dev</directory>-->
    <!--            </build>-->
    <!--        </profile>-->
    <!--        <profile>-->
    <!--            <id>prod</id>-->
    <!--            <properties>-->
    <!--                <profileName>prod</profileName>-->
    <!--            </properties>-->
    <!--            <build>-->
    <!--                <directory>${project.basedir}/target/prod</directory>-->
    <!--            </build>-->
    <!--        </profile>-->
    <!--        <profile>-->
    <!--            <id>test</id>-->
    <!--            <properties>-->
    <!--                <profileName>test</profileName>-->
    <!--            </properties>-->
    <!--            <build>-->
    <!--                <directory>${project.basedir}/target/test</directory>-->
    <!--            </build>-->
    <!--        </profile>-->
    <!--    </profiles>-->
</project>
